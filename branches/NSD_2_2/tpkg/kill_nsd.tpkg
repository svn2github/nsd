#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2006-04-11 10:35 CEST by <miekg@floep>.
# Source directory was `/home/miekg/svn/nsd/branches/NSD_2_2/tpkg/kill_nsd.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#     35 -rw------- kill_nsd.conf
#    284 -rw------- kill_nsd.dsc
#     36 -rw------- kill_nsd.help
#    607 -rw------- kill_nsd.pre
#   1215 -rw------- kill_nsd.test
#    683 -rw------- kill_nsd.zone
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh14226; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= kill_nsd.conf ==============
if test -f 'kill_nsd.conf' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.conf' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.conf' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.conf' &&
zone	miek.nl         kill_nsd.zone
SHAR_EOF
  (set 20 06 04 11 10 34 31 'kill_nsd.conf'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.conf' ||
  $echo 'restore of' 'kill_nsd.conf' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.conf:' 'MD5 check failed'
ef45ed1976bb00d9f82c68a8df7bd24c  kill_nsd.conf
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.conf'`"
    test 35 -eq "$shar_count" ||
    $echo 'kill_nsd.conf:' 'original size' '35,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.dsc ==============
if test -f 'kill_nsd.dsc' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.dsc' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.dsc' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.dsc' &&
BaseName: kill_nsd
Version: 1.0
Description: send NSD a signal and check if it died
CreationDate: Tue Apr 11 10:30:31 CEST 2006
Maintainer: Miek Gieben
Category: ops
Component: nsd
Depends: 
Help: kill_nsd.help
Pre: kill_nsd.pre
Post: 
Test: kill_nsd.test
AuxFiles: 
Passed:
Failure:
SHAR_EOF
  (set 20 06 04 11 10 33 57 'kill_nsd.dsc'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.dsc' ||
  $echo 'restore of' 'kill_nsd.dsc' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.dsc:' 'MD5 check failed'
3e2e46827e96be47dfa390db0c8da937  kill_nsd.dsc
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.dsc'`"
    test 284 -eq "$shar_count" ||
    $echo 'kill_nsd.dsc:' 'original size' '284,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.help ==============
if test -f 'kill_nsd.help' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.help' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.help' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.help' &&
There are no arguments to the test.
SHAR_EOF
  (set 20 06 04 11 10 34 10 'kill_nsd.help'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.help' ||
  $echo 'restore of' 'kill_nsd.help' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.help:' 'MD5 check failed'
1d09a028ec33ef9e76a129935e7447be  kill_nsd.help
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.help'`"
    test 36 -eq "$shar_count" ||
    $echo 'kill_nsd.help:' 'original size' '36,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.pre ==============
if test -f 'kill_nsd.pre' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.pre' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.pre' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.pre' &&
# source the var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# svnserve resets the path, you may need to adjust it, like this:
export PATH=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin:
X
# start NSD
((TPKG_PORT=5353+$RANDOM))
PRE="../.."
TPKG_NSD_PID="$PRE/nsd.pid.$$"
TPKG_ZONEC="$PRE/zonec"
TPKG_NSD="$PRE/nsd"
X
# share the vars
echo "export TPKG_PORT=$TPKG_PORT" >> .tpkg.var.test
echo "export TPKG_NSD_PID=$TPKG_NSD_PID" >> .tpkg.var.test
X
$TPKG_ZONEC -f kill_nsd.db kill_nsd.conf && \
$TPKG_NSD -u $LOGNAME -p $TPKG_PORT -P $TPKG_NSD_PID -f kill_nsd.db
SHAR_EOF
  (set 20 06 04 11 10 34 26 'kill_nsd.pre'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.pre' ||
  $echo 'restore of' 'kill_nsd.pre' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.pre:' 'MD5 check failed'
e56acf06af9bc896ba6bc8340b4d82cf  kill_nsd.pre
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.pre'`"
    test 607 -eq "$shar_count" ||
    $echo 'kill_nsd.pre:' 'original size' '607,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.test ==============
if test -f 'kill_nsd.test' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.test' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.test' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.test' &&
# source the var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# svnserve resets the path, you may need to adjust it, like this:
export PATH=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin:
[ -f .tpkg.var.test ] && source .tpkg.var.test
X
echo "NSD PORT: $TPKG_PORT"
X
# check if the pid file is already created (i.e. NSD has started)
MAX_SLEEP=10
i=0
while [[ ! -f $TPKG_NSD_PID ]]; do
X        echo no $TPKG_NSD_PID yet, waiting $i...
X        sleep 5
X        i=$(($i+1));
X        if [[ $i -ge $MAX_SLEEP ]]; then
X                echo Error no $TPKG_NSD_PID after this wait.
X                exit 1
X        fi
done
X
# kill NSD
NSD_PID=`cat $TPKG_NSD_PID`
echo kill $NSD_PID
kill $NSD_PID 2>/dev/null
X
# wait for NSD to exit.
MAX_WAIT=10
i=0
while ps waux | awk ' { print $2 } ' | grep -v grep | grep "^$NSD_PID$"; do
X        echo NSD did not exit yet, waiting $i...
X        sleep 5
X        i=$(($i+1));
X        if [[ $i -ge $MAX_SLEEP ]]; then
X                echo Error NSD did not exit after this wait.
X                exit 1
X        fi
done
X
ps waux | awk ' { print $2 } ' | grep -v grep | grep "^$NSD_PID$"
if [[ $? -eq 0 ]]; then
X        exit 1
else
X        exit 0
fi
SHAR_EOF
  (set 20 06 04 11 10 35 38 'kill_nsd.test'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.test' ||
  $echo 'restore of' 'kill_nsd.test' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.test:' 'MD5 check failed'
c80d1eef699a2d557158723158c8e654  kill_nsd.test
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.test'`"
    test 1215 -eq "$shar_count" ||
    $echo 'kill_nsd.test:' 'original size' '1215,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.zone ==============
if test -f 'kill_nsd.zone' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.zone' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.zone' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.zone' &&
; nothing fancy here
$TTL    4D
$ORIGIN miek.nl.
@       IN      SOA     open.nlnetlabs.nl. miekg.atoom.net. (
X                         2005061300         ; Serial
X                             4H         ; Refresh
X                             1H         ; Retry
X                             7D         ; Expire
X                             1D )       ; Negative Cache TTL
X		IN	NS	open.nlnetlabs.nl.
X		IN	NS	omval.tednet.nl.
X		IN	NS	elektron.atoom.net.
X
X		IN	MX	20 mail.atoom.net.
X		IN	MX	20 sol.nlnetlabs.nl.
X
miek.nl.	IN	A	80.127.17.126
localhost	IN	A	127.0.0.1
a	    	IN	A	80.127.17.126
www     	IN 	CNAME 	a
text            IN      TXT     "Hallo, ik ben Miek, wie gets mit dir?"
SHAR_EOF
  (set 20 06 04 11 10 30 31 'kill_nsd.zone'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.zone' ||
  $echo 'restore of' 'kill_nsd.zone' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.zone:' 'MD5 check failed'
bd97d1b268f360ceb6b5ecfd3b0a32be  kill_nsd.zone
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.zone'`"
    test 683 -eq "$shar_count" ||
    $echo 'kill_nsd.zone:' 'original size' '683,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh14226
exit 0
